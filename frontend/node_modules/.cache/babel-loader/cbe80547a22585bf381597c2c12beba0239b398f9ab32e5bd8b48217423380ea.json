{"ast":null,"code":"var _jsxFileName = \"/home/eduardo/Documents/workspace/finance-app/frontend/src/TransactionContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { instance } from \"./services/instanceAxios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionContext = /*#__PURE__*/createContext({});\nexport const TransactionProvider = ({\n  children\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    instance.get('/transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n  const createTransaction = transaction => {\n    instance.post('/transactions', transaction);\n  };\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      transaction,\n      create\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = TransactionProvider;\nvar _c;\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","instance","jsxDEV","_jsxDEV","TransactionContext","TransactionProvider","children","_s","transactions","setTransactions","get","then","response","data","createTransaction","transaction","post","Provider","value","create","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/eduardo/Documents/workspace/finance-app/frontend/src/TransactionContext.tsx"],"sourcesContent":["import { Children, createContext, ReactNode, useEffect, useState } from \"react\";\nimport { instance } from \"./services/instanceAxios\";\n\n\ninterface Transaction {\n    id: number;\n    title: string;\n    type: string;\n    category: string;\n    amount: number;\n    createdAt: string;\n}\n\ninterface TransactionProviderProps {\n    children: ReactNode; // Aceita qualquer tipo \n}\n\ninterface TransactionContextData {\n    transaction: Transaction[];\n    createTransaction: (transaction: transactionInput) => void;\n}\n\ntype transactionInput = Omit<Transaction, 'id' | 'createdAt'>;\n\n\nexport const TransactionContext = createContext<TransactionContextData>({} as TransactionContextData);\n\n\nexport const TransactionProvider = ({ children }: TransactionProviderProps) => {\n\n    const [transactions, setTransactions] = useState<Transaction[]>([]);\n    \n    useEffect(() => {\n        instance.get('/transactions').then(response => setTransactions(response.data.transactions));\n    }, []);\n    \n    const createTransaction = (transaction: transactionInput) => {\n        instance.post('/transactions', transaction);\n    }\n\n    return (\n        <TransactionContext.Provider value={ {transaction, create} }>\n            { children }\n        </TransactionContext.Provider>\n    );\n}\n\n"],"mappings":";;AAAA,SAAmBA,aAAa,EAAaC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/E,SAASC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAwBpD,OAAO,MAAMC,kBAAkB,gBAAGN,aAAa,CAAyB,CAAC,CAA2B,CAAC;AAGrG,OAAO,MAAMO,mBAAmB,GAAGA,CAAC;EAAEC;AAAmC,CAAC,KAAK;EAAAC,EAAA;EAE3E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAgB,EAAE,CAAC;EAEnED,SAAS,CAAC,MAAM;IACZE,QAAQ,CAACS,GAAG,CAAC,eAAe,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAI,CAACL,YAAY,CAAC,CAAC;EAC/F,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,iBAAiB,GAAIC,WAA6B,IAAK;IACzDd,QAAQ,CAACe,IAAI,CAAC,eAAe,EAAED,WAAW,CAAC;EAC/C,CAAC;EAED,oBACIZ,OAAA,CAACC,kBAAkB,CAACa,QAAQ;IAACC,KAAK,EAAG;MAACH,WAAW;MAAEI;IAAM,CAAG;IAAAb,QAAA,EACtDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAEtC,CAAC;AAAAhB,EAAA,CAjBYF,mBAAmB;AAAAmB,EAAA,GAAnBnB,mBAAmB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}